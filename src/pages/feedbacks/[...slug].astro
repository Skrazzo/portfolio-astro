---
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import InfoPage from "~layouts/InfoPage.astro";
import GlassContainer from "~components/GlassContainer.astro";
import { SEO } from "astro-seo";
import type { CollectionEntry } from "astro:content";
import LinkButton from "~components/Project/LinkButton.astro";
import { hasFileExtension } from "~utils/hasFileExtension";

// Generate static paths for all projects
export async function getStaticPaths() {
    const projects = await getCollection("feedbacks");
    console.log(projects);
    return projects
        .map((project) => ({
            params: { slug: project.id },
            props: { project },
        }))
        .filter((data) => !hasFileExtension(data.props.project.data.fullFeedbackLink || ""));
}

interface Props {
    project: CollectionEntry<"feedbacks">;
}

const { project }: Props = Astro.props;
const { Content } = await render(project);

// Extract project data
const { fromName, stars, snippet } = project.data;

// Set meta description to be the snippet
let metaDescription = snippet;
---

<InfoPage>
    <SEO
        slot="head"
        title={`Feedback from ${fromName}`}
        description={metaDescription}
        extend={{
            meta: [
                { name: "author", content: fromName },
                {
                    name: "keywords",
                    content: `web development, ${fromName}, feedback, portfolio project, Leons, programming`,
                },
            ],
        }}
    />

    <GlassContainer className="mb-[80px]" transition:animate="slide">
        <h1 slot="title" class="text-gradient title-gradient-left text-center" transition:name="title">{fromName}</h1>
    </GlassContainer>
</InfoPage>

<style>
    h1 {
        font-size: clamp(var(--text-mobile-title), 3vw, var(--text-title));
    }

    .links {
        color: var(--text);
        font-size: clamp(var(--text-mobile-lg), 2vw, var(--text-lg));
    }

    .project-description {
        font-size: clamp(var(--text-mobile-md), 2vw, var(--text-md));
        line-height: calc(clamp(var(--text-mobile-md), 2vw, var(--text-md)) * 1.3);
    }

    .project-description :global(p) {
        margin-bottom: 1rem;
    }
</style>
