---
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import InfoPage from "~layouts/InfoPage.astro";
import GlassContainer from "~components/GlassContainer.astro";
import { SEO } from "astro-seo";
import type { CollectionEntry } from "astro:content";
import LinkButton from "~components/Project/LinkButton.astro";

// Generate static paths for all projects
export async function getStaticPaths() {
    const projects = await getCollection("projects");
    return projects.map((project) => ({
        params: { slug: project.id },
        props: { project },
    }));
}

interface Props {
    project: CollectionEntry<"projects">;
}

const { project }: Props = Astro.props;
const { Content } = await render(project);

// Extract project data
const { title, image, github, website, video } = project.data;

// Create a more meaningful and SEO-friendly page title
const pageTitle = `${title} | Leons Aleksandrovs Portfolio`;

// Create a concise and descriptive meta description
let metaDescription = `Explore ${title} - A web development project by Leons Aleksandrovs, showcasing innovative solutions and technical expertise.`;
if (project.body) {
    // Generate description from markdown, ensuring it's not too long
    const cleanDescription =
        project.body
            .replace(/[#*_]/g, "") // Remove markdown symbols
            .replace(/\n+/g, " ") // Replace newlines with spaces
            .trim()
            .slice(0, 157) + "...";

    metaDescription = cleanDescription;
}
---

<InfoPage title={pageTitle}>
    <SEO
        slot="head"
        title={pageTitle}
        description={metaDescription}
        openGraph={{
            basic: {
                title: pageTitle,
                type: "article",
                image: image.src,
            },
            image: {
                alt: `Preview of ${title} project`,
            },
        }}
        extend={{
            meta: [
                { name: "author", content: "Leons Aleksandrovs" },
                {
                    name: "keywords",
                    content: `web development, ${title}, portfolio project, Leons Aleksandrovs, programming, web design`,
                },
                { property: "og:title", content: pageTitle },
                { property: "og:description", content: metaDescription },
                { name: "twitter:card", content: "summary_large_image" },
                { name: "twitter:title", content: pageTitle },
                { name: "twitter:description", content: metaDescription },
            ],
        }}
    />

    <GlassContainer className="mb-[80px]" transition:animate="slide" as="article">
        <header slot="title" class="text-center">
            <h1 class="text-gradient title-gradient-left" transition:name={`title-${title}`}>{title}</h1>
        </header>

        <section class="mt-8">
            <figure>
                {
                    video ? (
                        <video
                            class="w-full rounded-lg border-2 border-light"
                            controls
                            poster={image.src}
                            transition:name={`video-${title}`}
                            aria-label={`${title} project demonstration video`}
                        >
                            <source src={video} type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    ) : (
                        <Image
                            src={image}
                            alt={`Screenshot of ${title} project`}
                            class="w-full rounded-lg border-2 border-light"
                            transition:name={title}
                        />
                    )
                }
            </figure>

            <nav class="links flex gap-4 mt-6" aria-label="Project links">
                {
                    github && (
                        <LinkButton
                            href={github}
                            target="_blank"
                            icon="github"
                            aria-label={`View ${title} source code on GitHub`}
                        >
                            Github
                        </LinkButton>
                    )
                }
                {
                    website && (
                        <LinkButton
                            href={website}
                            target="_blank"
                            icon="click"
                            aria-label={`Visit ${title} live website`}
                        >
                            Visit
                        </LinkButton>
                    )
                }
            </nav>

            <section
                transition:name={`text-${title}`}
                class="project-description mt-6 text-gradient title-gradient-left"
            >
                <Content />
            </section>
        </section>
    </GlassContainer>
</InfoPage>

<style>
    h1 {
        font-size: clamp(var(--text-mobile-title), 3vw, var(--text-title));
    }

    .links {
        color: var(--text);
        font-size: clamp(var(--text-mobile-lg), 2vw, var(--text-lg));
    }

    .project-description {
        font-size: clamp(var(--text-mobile-md), 2vw, var(--text-md));
        line-height: calc(clamp(var(--text-mobile-md), 2vw, var(--text-md)) * 1.3);
    }

    .project-description :global(p) {
        margin-bottom: 1rem;
    }
</style>
