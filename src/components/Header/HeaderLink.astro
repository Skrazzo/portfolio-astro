---
interface Props {
    name: string;
    href: string;
}

const { name, href } = Astro.props;

// Get current link and understand if this page is active or not
const active = Astro.url.pathname.includes(href);
---

<a
    class="px-0 md:px-4 font-semibold border-2 border-transparent decoration-transparent w-fit"
    class:list={["text-dimmed", "text-md", { active }]}
    href={href}>{name}</a
>

<style>
    a {
        font-size: clamp(var(--text-mobile-md), 2.1vw, var(--text-md));

        border-radius: 1rem;
        text-decoration-color: transparent;

        transition:
            scale 250ms ease,
            text-decoration-color 250ms ease,
            color 250ms ease;

        &:hover {
            scale: 1.02;
            color: var(--text);
        }
    }

    .active {
        color: var(--text);
    }

    @media (max-width: 768px) {
        a {
            font-size: var(--text-md);

            &:hover {
                scale: 1;

                text-decoration: underline;
                text-decoration-color: var(--accent);
            }
        }

        .active {
            text-underline-offset: 3px;
            text-decoration: underline;
            text-decoration-color: var(--accent);
        }
    }
</style>
