---
interface Props {
    iconName: string;
    showBurger: boolean;
}

const { iconName = "menu", showBurger }: Props = Astro.props;

import { Icon } from "astro-icon/components";
import HeaderLink from "./HeaderLink.astro";
---

<header class="flex max-md:flex-wrap md:justify-between items-center py-8 px-16">
    {
        showBurger && (
            <div
                class="md:hidden mr-3 p-[6px] bg-panel-background border-2 border-panel-border rounded-md cursor-pointer"
                onclick="toggleDrawer()"
            >
                <Icon stroke-width={3} class={"text-light"} name={iconName} />
            </div>
        )
    }

    <div class="flex items-center gap-3">
        <h2
            class="text-gradient font-bold title-gradient-down uppercase cursor-pointer"
            onclick="window.location.href=''"
        >
            skrazzo.xyz
        </h2>
        <span class="text-dimmer uppercase font-semibold text-xs border-2 border-dimmer rounded-[3px] px-1.5"
            >portfolio</span
        >
    </div>
    <nav
        class="max-md:mt-8 max-md:flex-col max-md:w-full hidden gap-4 md:flex md:items-center md:gap-2 md:text-center lg:gap-8"
    >
        <HeaderLink ariaLabel="Learn more about me" name="About me" href="about-me" />
        <HeaderLink ariaLabel="My best projects" name="My projects" href="projects" />
        <HeaderLink ariaLabel="Contact me via form or other links" name="Contact me" href="contact" />
    </nav>
</header>

<style>
    header {
        padding: var(--padding-y) var(--padding-x);
    }

    h2 {
        font-size: clamp(var(--text-mobile-lg), 6vw, var(--text-lg));
    }

    span {
        font-size: clamp(var(--text-mobile-xs), 3vw, var(--text-xs));
    }

    svg {
        width: clamp(24px, 7vw, 36px);
        height: clamp(24px, 7vw, 36px);
    }
</style>

<script is:inline>
    function toggleDrawer() {
        const drawer = document.querySelector(".drawer");
        if (drawer) {
            // If drawer is open, show animation and close it
            if (drawer.classList.contains("menu-drawer-open")) {
                drawer.classList.add("menu-drawer-close-anim");

                setTimeout(() => {
                    drawer.classList.remove("menu-drawer-open");
                    drawer.classList.remove("menu-drawer-close-anim");
                }, 300);
            } else {
                // Add class to open drawer
                drawer.classList.add("menu-drawer-open");
            }
        } else {
            throw new Error("Could not find drawer element");
        }
    }
</script>
